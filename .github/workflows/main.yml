name: ci pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  setup:
    name: Set up cache and install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: |
          cd app
          pnpm install

  linting:
    name: Code Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linting
        run: |
          cd app
          pnpm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run unit tests
        run: |
          cd app
          pnpm test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: setup
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ubereats_platform_local
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d
      - name: Wait for MySQL to be ready
        run: |
          until docker exec mysql mysqladmin ping -h "localhost" --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done
      - name: Run integration tests
        run: |
          cd server
          pnpm run test:integration
      - name: Tear down Docker Compose
        run: docker-compose -f docker-compose.yml down

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [linting, unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: docker-compose build
      - name: Push Docker Image
        run: docker-compose push
